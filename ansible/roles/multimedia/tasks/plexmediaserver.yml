- name: Install plexmediaserver from AUR
  script: ../../../scripts/install-aur.sh plex-media-server
  register: install_result
  changed_when: install_result.rc == 0
  failed_when: install_result.rc != 0 and install_result.rc != 255
  tags:
    - aur
    - multimedia
    - plexmediaserver

- name: Ensure plexmediaserver is up
  service:
    name: plexmediaserver.service
    state: started
    enabled: yes

# still need to store preconfigured settings
- name: Prepare to install plexmediaserver plugins
  block:
    - name: Create the destination path for the plexmediaserver plugins
      file:
        path: '/home/{{ user_name }}/{{ item }}'
        state: directory
        recurse: yes
        mode: '777'
      with_items:
        - [
            '/plex-plugins-tmp',
            '/Library/Application Support/Plex Media Server/Plug-ins',
          ]

    - name: Download plexmediaserver plugins as zip files
      get_url:
        url: '{{ item }}'
        dest: '/home/{{ user_name }}/plex-plugins-tmp'
        mode: '777'
      with_items: '{{ multimedia_plexmediaserver_plugins }}'
      register: zip_files

    - name: Extract plexmediaserver plugins zip files into Plugins folder
      unarchive:
        src: '/home/{{ user_name }}/plex-plugins-tmp/{{ item }}'
        dest: '/home/{{ user_name }}/Library/Application Support/Plex Media Server/Plug-ins'
        copy: no
      with_items: '{{ zip_files.stdout }}'

- name: Restart plexmediaserver service
  ansible.builtin.service:
    name: plexmediaserver.service
    state: restarted
